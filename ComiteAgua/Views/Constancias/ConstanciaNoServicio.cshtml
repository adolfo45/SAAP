@model ComiteAgua.ViewModels.Constancias.ConstanciaNoServicioViewModel
@{
    ViewBag.Title = Model.Titulo;
    ViewBag.UrlRetorno = Url.Action("Index", "Home");
}

<br />

<form id="constanciaForm" method="post">
    @Html.HiddenFor(m => m.ConstanciaId)
    @Html.Hidden("downloadToken", Model.DownloadToken)
    <div class="col-md-6 mr-auto ml-auto">
        <div class="card">
           
            <div class="card-body">
                @*Nombre propietario*@
                <div class="form-group row">
                    @Html.LabelFor(x => x.Propietario, new { @for = "Propietario", @class = "col-md-3 offset-md-1 col-form-label" })
                    <div class="col-sm-6">
                        @Html.TextBoxFor(m => m.Propietario, new { @class = "form-control form-control-sm" })
                        @Html.ValidationMessageFor(m => m.Propietario, null, new { @class = "badge badge-pill badge-danger" })
                    </div>
                </div>
                @*Tipo Calle*@
                <div class="form-group row">
                    @Html.LabelFor(x => x.TipoCalleId, new { @for = "TipoCalleId", @class = "col-md-3 offset-md-1 col-form-label" })
                    <div class="col-sm-6">
                        @Html.DropDownListFor(m => m.TipoCalleId, new SelectList(Model.TiposCalle, "TipoCalleId", "Nombre"), "Seleccione una opción", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.TipoCalleId, null, new { @class = "badge badge-pill badge-danger" })
                    </div>
                </div>
                @*Calle*@
                <div class="form-group row">
                    @Html.LabelFor(x => x.CalleId, new { @for = "CalleId", @class = "col-md-3 offset-md-1 col-form-label" })
                    <div class="col-sm-6">
                        @Html.DropDownListFor(m => m.CalleId, new SelectList(Model.Calles, "CalleId", "Nombre"), "Seleccione una opción", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CalleId, null, new { @class = "badge badge-pill badge-danger" })
                    </div>
                </div>
                @*Colonia*@
                <div class="form-group row">
                    @Html.LabelFor(x => x.ColoniaId, new { @for = "ColoniaId", @class = "col-md-3 offset-md-1 col-form-label" })
                    <div class="col-sm-6">
                        @Html.DropDownListFor(m => m.ColoniaId, new SelectList(Model.Colonias, "ColoniaId", "Nombre"), "Seleccione una opción", new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ColoniaId, null, new { @class = "badge badge-pill badge-danger" })
                    </div>
                </div>
                @*No Int*@
                <div class="form-group row">
                    @Html.LabelFor(x => x.NoInt, new { @for = "NoInt", @class = "col-md-3 offset-md-1 col-form-label" })
                    <div class="col-sm-6">
                        @Html.TextBoxFor(m => m.NoInt, new { @class = "form-control form-control-sm" })
                    </div>
                </div>
                @*No Ext*@
                <div class="form-group row">
                    @Html.LabelFor(x => x.NoExt, new { @for = "NoExt", @class = "col-md-3 offset-md-1 col-form-label" })
                    <div class="col-sm-6">
                        @Html.TextBoxFor(m => m.NoExt, new { @class = "form-control form-control-sm" })
                    </div>
                </div>
                @*Costo*@
                <div class="form-group row">
                    @Html.LabelFor(x => x.Costo, new { @for = "Costo", @class = "col-md-3 offset-md-1 col-form-label" })
                    <div class="col-sm-6">
                        @Html.TextBoxFor(m => m.Costo, new { @class = "form-control form-control-sm moneda" })
                        @Html.ValidationMessageFor(m => m.Costo, null, new { @class = "badge badge-pill badge-danger" })
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <div class="row">
                    <div class="col-md-3 offset-md-2 text-center">
                        <button id="DescargarButton" type="button" class="btn btn-success">Descargar</button>
                    </div>
                    <div class="col-md-3 offset-md-2 text-center">
                        <button id="ImprimirButton" type="button" class="btn btn-primary" disabled>Imprimir recibo</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section scripts
{
<script>
        $(document).ready(function () {


                $("button[disabled=disabled]").removeClass('btn-primary').addClass('grisClaro');
            });
    $("#ImprimirButton").click(function () {
        BloquearProcesando();
            var propietario = document.getElementById('Propietario').value;
            window.location = "@Url.Action("ImprimirReciboConstanciaNoServicio", "Constancias")?propietario=" + propietario;
        });
         $("#DescargarButton").click(function () {
                if ($("#constanciaForm").valid()) {
                    var token = new Date().getTime();
                    blockUIForDownload(token)
                    $("#ImprimirButton").prop('disabled', false);
                    document.getElementById('downloadToken').value = token;

                    window.location = "@Url.Action("DescargarConstanciaNoServicio", "Constancias")?" + $("#constanciaForm").serialize();
                    }
                });

            var fileDownloadCheckTimer;
        function blockUIForDownload(token) {
            BloquearProcesando();
            fileDownloadCheckTimer = window.setInterval(function () {
                var cookieValue = $.cookie("fileDownloadToken");
                if (cookieValue == token)
                    finishDownload();
            }, 1000);
        }

        function finishDownload() {
            window.clearInterval(fileDownloadCheckTimer);
            $.removeCookie('fileDownloadToken'); //clears this cookie value
            $.unblockUI();
        }
</script>
}
