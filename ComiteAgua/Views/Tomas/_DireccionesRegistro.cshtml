@model ComiteAgua.ViewModels.Tomas.DireccionesViewModel

@{

}

<form id="DireccionForm">
    @Html.HiddenFor(m => m.PropietarioId)
    @Html.HiddenFor(m => m.TomaId)
    @Html.HiddenFor(m => m.DireccionId)
    @Html.HiddenFor(m => m.TipoPersonaId)
    @Html.Hidden("downloadTokenFileDireccion", Model.DownloadTokenFileDireccion)

    @*Tipo Calle*@
    <div class="form-group row">
        @Html.LabelFor(x => x.TipoCalleId, new { @for = "TipoCalleId", @class = "col-md-2 col-form-label ml-auto" })
        <div class="col-sm-6 mr-auto">
            @Html.DropDownListFor(m => m.TipoCalleId, new SelectList(Model.TiposCalle, "TipoCalleId", "Nombre"), "Seleccione una opción", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.TipoCalleId, null, new { @class = "badge badge-pill badge-danger" })
        </div>
    </div>
    @*Calle*@
    <div class="form-group row">
        @Html.LabelFor(x => x.CalleId, new { @for = "CalleId", @class = "col-md-2 col-form-label ml-auto" })
        <div class="col-sm-6 mr-auto">
            @Html.DropDownListFor(m => m.CalleId, new SelectList(Model.Calles, "CalleId", "Nombre"), "Seleccione una opción", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.CalleId, null, new { @class = "badge badge-pill badge-danger" })
        </div>
    </div>
    @*Num Int*@
    <div class="form-group row">
        @Html.LabelFor(x => x.NumInt, new { @for = "NumInt", @class = "col-md-2 col-form-label ml-auto" })
        <div class="col-sm-6 mr-auto">
            @Html.TextBoxFor(d => d.NumInt, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.NumInt, null, new { @class = "badge badge-pill badge-danger" })
        </div>
    </div>
    @*Num Ext*@
    <div class="form-group row">
        @Html.LabelFor(x => x.NumExt, new { @for = "NumExt", @class = "col-md-2 col-form-label ml-auto" })
        <div class="col-sm-6 mr-auto">
            @Html.TextBoxFor(d => d.NumExt, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.NumExt, null, new { @class = "badge badge-pill badge-danger" })
        </div>
    </div>
    @*Colonia*@
    <div class="form-group row">
        @Html.LabelFor(x => x.ColoniaId, new { @for = "ColoniaId", @class = "col-md-2 col-form-label ml-auto" })
        <div class="col-sm-6 mr-auto">
            @Html.DropDownListFor(m => m.ColoniaId, new SelectList(Model.Colonias, "ColoniaId", "Nombre"), "Seleccione una opción", new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.ColoniaId, null, new { @class = "badge badge-pill badge-danger" })
        </div>
    </div>
    @if (Model.DireccionId == 0)
    {
        @*Precio*@
        <div class="form-group row">
            @Html.LabelFor(x => x.Precio, new { @for = "Precio", @class = "col-md-2 col-form-label ml-auto" })
            <div class="col-sm-6 mr-auto">
                @Html.TextBoxFor(d => d.Precio, new { @class = "form-control moneda", id = "precioToma" })
                @Html.ValidationMessageFor(m => m.Precio, null, new { @class = "badge badge-pill badge-danger" })
            </div>
        </div>
    }
    @*Button*@
    <div class="row">
        <div class="mr-auto ml-auto">
            <button id="GuardarDireccionButton" type="button" class="btn btn-success">Guardar</button>
        </div>
    </div>
</form>

    <script>
        $("#GuardarDireccionButton").click(function () {
            if ($("#DireccionForm").valid()) {
                var token = new Date().getTime();
                blockUIForDownload(token)
                document.getElementById('downloadTokenFileDireccion').value = token;

                window.location = "@Url.Action("GuardarDireccion", "Tomas")?" + $("#DireccionForm").serialize();
            }
        });//$("#GuardarDireccionButton").click(function () {
    </script>
